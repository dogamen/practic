# -*- coding: utf-8 -*-
"""Копия блокнота "Практика 0.3.0.ipynb"

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KLbaaZ39mi99xgOweqIv53LpqZCNrUBy

ФИО
"""

Елгин Никита Сергеевич

"""**Во всей практике нельзя применять библиотеки предоставляющие готовые решения!**

# **Задача 1.**

Типы данных Напишите программу на Python, которая принимает список чисел в качестве входных данных от пользователя, а затем выводит сумму, среднее значение и максимальное значение из списка.

***Нельзя использовать: len(), min(), max(), average(), sum()***

Ввод:
```
1 2 3 4 5 6 7
```
Вывод:

```
Сумма чисел: 28
Среднее арифм.: 4.0
Максимальное значение: 7
```
"""

s = list(map(int, input().split()))
sum_ = 0
counter = 0
d = 0


for i in s:
    counter=counter+1


for i in range(counter):
  sum_ += s[i]
  if s[i] > d:
    d = s[i]

print('сумма чисел:', sum_)
print('среднее арифм:', sum_ / counter)
print( 'максимальное', counter)

"""# **Задача 2.**

Напишите программу на Python, которая принимает список слов в качестве входных данных от пользователя, а затем распечатывает список в обратном порядке.

Ввод:

```
апельсин мандарин яблоко
```

Вывод:

```
яблоко мандарин апельсин
```
"""

s = input().split()
print(*s[::-1], sep=' ')

"""# **Задача 3**

Простой чат-бот
Создайте простого чат-бота, который отвечает на основные запросы пользователей. Программа должна использовать условные выражения для определения намерений пользователя и последующего соответствующего ответа.

Чат бот может:

- помогать складывать числа
- подсказывать фильм, музыку и тд (из заранее созданного списка)
- создавать список дел (а также выводить его, обновлять, очищать)

Интерфейс чат-бота на ваше усмотрение, это могут быть как заранее определенные команды, так и к примеру вызов команды по номеру

*Реализовать без использования функций*

Пример:

Ввод:

```
Олег, какую мызыку посоветуешь?
```

Вывод:

```
Я бы посоветовал вам: Led Zeppelin Stairway to Heaven
```
"""

while True:
  print('выберите интересующий вариант:', '1.сложение чисел', '2.рекомендация музыки', '3.работа со списком дел', '4.выход', sep='\n')
  b = int(input())
  sum2 = 0
  if b == 1:
    sum1 = list(map(int,input('введите числа которые необходимо сложить:\n').split()))
    for i in range(len(sum1)):
      sum2 += sum1[i]
    print(sum2)
  elif b == 2:
    print('какую музыку вы предпочитаете?', 'введите цифру предпочитаемого жанра', '1.инди', '2.панк','3.поп', sep='\n')
    c = int(input())
    if c == 1:
      print('Я бы посоветовал вам: static - steve lacy')
    elif c == 2:
      print('Я бы посоветовал вам: you`re gonna go fer,kid - the offspring')
    else:
      print('Я бы посоветовал вам: bad dreams - teddy swims')
  elif b == 3:
    print('выберите необходимый вариант:','1.создание графика дел','2.вывод графика дел','3.изменение графика дел', '4.удаление графика дел', sep='\n')
    a = int(input())
    if a == 1 or a == 3:
      plan = input('введите график дел:')
    elif a == 2:
      print(plan)
    else:
      plan = ''
  elif b == 4:
    break

"""# **Задача 4.**

Камень, ножницы, бумага

Создайте игру в Камень, ножницы, бумагу, в которой пользователь может играть против компьютера. Программа должна запросить выбор пользователя, а затем сгенерировать выбор компьютера. Затем программа должна определить победителя на основе правил игры.

**Этап 1:**

Определение победителя

**Этап 2:**
  
Игра до 3 побед


Ввод для "Этап 1":

```
Камень
```

Вывод:

```
Компьютер: Ножницы
Игрок: Камень
Победа: Игрок
```
"""

import random

knb = ['камень', 'ножницы', 'бумага']
variant_pc = 0
player = 0
pc = 0


while player != 3 or pc != 3:
    variant = input()
    variant_pc = random.choice(knb)

    if variant == variant_pc:
        print('Победа: ничья')
    elif variant == 'камень' and variant_pc == 'ножницы':
        print('Победа: игрок')
    elif variant == 'бумага' and variant_pc == 'камень':
        print('Победа: игрок')
    elif variant == 'ножницы' and variant_pc == 'бумага':
        print('Победа: игрок')
        player += 1
    else:
        print('победа: компьютер')
        pc += 1
    if player == 3:
        print('победитель: игрок')
        break
    elif pc == 3:
        print('победитель:компьютер')
        break

"""# **Задача 5.**

Создайте игру "Палач" или "Виселица", в которой пользователь должен угадать слово, предлагая буквы. Программа должна выбрать случайное слово, а затем разрешить пользователю угадывать буквы. После каждого угадывания программа должна сообщать пользователю, есть ли в слове буква или нет.

**Этап 1**
Создать саму игру (игра должна иметь привлекательный интерфейс, соотвесвующий классической висилице)

**Этап 2:**
Ввести подсчет количества очков и ограничения на попытки

**Этап 3:** Добавить возможность сразу угадать слово
"""

import random


words = ['анимизм', 'вычеркнуть', 'котиться', 'могильник',
        'обнаглеть', 'перехвалить', 'разверзнуться',
        'разогнуться', 'сосуществовать', 'шарик']

rdm_word = random.choice(words)

print('слово имеет', len(rdm_word), 'букв')

while True:
    a = input('введите букву или слово:')
    if a == rdm_word:
        print('вы угадали слово')
        break
    if a in rdm_word:
        print('этих букв', rdm_word.count(a))

"""# **Дополнительно: Задача 6.**

**Цифра на определенном месте:**

Последовательно записан натуральный ряд чисел.

Какая цифра стоит в N позиции


Вввод:

```
Введите номер позиции: 1234567890
```

Вывод:

```
8
```
"""

